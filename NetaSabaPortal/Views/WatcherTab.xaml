<UserControl x:Class="NetaSabaPortal.Views.WatcherTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NetaSabaPortal.Views"
             xmlns:converter="clr-namespace:NetaSabaPortal.Views.Converters"
             xmlns:behaviors="clr-namespace:NetaSabaPortal.Views.Behaviors"
             xmlns:vdialogs="clr-namespace:NetaSabaPortal.Views.Dialogs"
             
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:LocalizeDictionary.DesignCulture="zh-tw"
             xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
             
             
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="2300" d:Background="White" x:Name="watcherTab"
             >
    <UserControl.Resources>
        <converter:BooleanToGreyOrRedColorConverter x:Key="BooleanToGreenRedColorConverter"/>
        <converter:InvertableBooleanToVisibilityConverter x:Key="BoolVisConverter"/>
        <converter:BooleanToMdPackIconKindConverter x:Key="BoolMdIconConverter"/>
        <converter:BooleanToGreenOrRedColorConverter x:Key="Bool_GreenOrRedConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.ColumnSpan="2" d:Visibility="Collapsed" Visibility="{Binding IsWatcherEditConfirmDialogShown, Converter={StaticResource BoolVisConverter}, ConverterParameter=Normal}">

            <Grid Height="{Binding Path=ActualHeight, ElementName=watcherTab}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="4*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Are you sure to delete the selected item(s)?" VerticalAlignment="Bottom" HorizontalAlignment="Center" FontSize="20" Margin="10"/>
                <StackPanel Grid.Row="1" Grid.Column="1" Width="200">
                    <Button Margin="5,10" MinWidth="110" Background="Red" BorderBrush="Red"
                            Command="{Binding WatcherConfirmOkCmd}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Check" Height="25" Width="50" Margin="-20,0,-10,0"/>
                            <TextBlock Text="Confirm" FontSize="20"/>
                        </StackPanel>
                    </Button>
                    <Button Margin="5,10" MinWidth="110" Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                            Command="{Binding WatcherConfirmCancelCmd}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Cancel" Height="25" Width="50" Margin="-20,0,-10,0"/>
                            <TextBlock Text="Cancel" FontSize="20"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

            </Grid>
        </DockPanel>
        <DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5"
                   >
            <Button Margin="5,1" MinWidth="110" Style="{DynamicResource MaterialDesignRaisedDarkButton}"
                    Command="{Binding AddWatchItemCmd}">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="AddAlert" Foreground="#FFF" Height="25" Width="50" Margin="-20,0,-10,0"/>
                    <TextBlock Text="Add" FontSize="20"/>
                </StackPanel>
            </Button>
            <Button Margin="5,1" MinWidth="110"
                    CommandParameter="{Binding ElementName=lvWatcherItems, Path=SelectedItems}"
                    Command="{Binding DelWatchItemCmd}">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Delete" Foreground="#FFF" Height="25" Width="50" Margin="-20,0,-12,0"/>
                    <TextBlock Text="Delete" FontSize="20"/>
                </StackPanel>
            </Button>
            <materialDesign:PackIcon Kind="Power" Height="30" Width="30" Margin="0,2,0,0"/>
            <ToggleButton Margin="5,0" IsChecked="{Binding IsWatcherEnabled}"/>
            <materialDesign:PackIcon Kind="WrenchClock" Height="30" Width="30" Margin="25,0,5,0"/>
            <TextBox MinWidth="70" Margin="0,0,10,0" FontSize="18" Text="{Binding WatcherInterval}" d:Text="36400"/>
            <materialDesign:PackIcon Kind="Walk" Height="30" Width="30" Margin="25,0,0,0"/>
            <materialDesign:PackIcon Kind="BarrierUp" Height="25" Width="25" Margin="-10,5,5,0"/>
            <TextBox MinWidth="70" Margin="0,0,10,0" FontSize="18" Text="{Binding WatcherAutoJoinCooldown}" d:Text="36400"/>
            <materialDesign:PackIcon Kind="ChatAlert" Height="30" Width="30" Margin="25,0,0,0"/>
            <materialDesign:PackIcon Kind="ClockOutline" Height="20" Width="20" Margin="-4,10,5,0"/>
            <TextBox MinWidth="70" Margin="0,0,10,0" FontSize="18" Text="{Binding WatcherNotifyCooldown}" d:Text="36400"/>
            <materialDesign:PackIcon Kind="Walk" Height="30" Width="30" Margin="25,0,0,0"/>
            <materialDesign:PackIcon Kind="NumericOneCircleOutline" Height="20" Width="20" Margin="-8,10,0,0"/>
            <ToggleButton Margin="5,0" IsChecked="{Binding IsTurnOffWatcherTimerAfterJoin}"/>
            <DockPanel LastChildFill="False" HorizontalAlignment="Right">
                <Button Command="{Binding WatcherStopSound}">
                    <materialDesign:PackIcon Kind="Mute" Foreground="#FFF" Height="25" Width="25" Margin="-10,0"/>
                </Button>
            </DockPanel>
        </DockPanel>
        <DockPanel Grid.Row="2" Visibility="{Binding IsWatcherEditDialogShown, Converter={StaticResource BoolVisConverter}, ConverterParameter=Normal}">
            <vdialogs:EditWatcherItemDialog/>
        </DockPanel>
        <ListView x:Name="lvWatcherItems" Grid.Row="2" Grid.Column="1" Margin="5" ItemsSource="{Binding WatcherItems}" DisplayMemberPath="DisplayName" SelectedItem="{Binding SelectedWatcherItem}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView AllowsColumnReorder="True" ColumnHeaderToolTip="Info" >
                    <GridViewColumn Width="36">
                        <materialDesign:PackIcon Kind="Alarm" Height="25" Width="25" Margin="-20,0"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon
                                    Kind="{Binding IsEnabled, Converter={StaticResource BoolMdIconConverter}}"
                                    Foreground="{Binding IsEnabled, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding DisplayName}">
                        <materialDesign:PackIcon Kind="FileOutline" Height="25" Width="25" Margin="0"/>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Host}">
                        <materialDesign:PackIcon Kind="LinkVariant" Height="25" Width="25" Margin="0"/>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding SearchRegion}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Globe" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="Magnify" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding SearchName}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Abc" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="Magnify" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding SearchPort}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Firewall" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="Magnify" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding SearchTag}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="TagOutline" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="Magnify" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Walk" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="HouseAutomation" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsJoinWhenHostAvailable, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsJoinWhenHostAvailable, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Walk" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="LoveSeat" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsJoinWhenSlotAvailable, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsJoinWhenSlotAvailable, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="HouseAutomation" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="ChatAlert" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsNotifyWhenHostAvailable, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsNotifyWhenHostAvailable, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="LoveSeat" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="ChatAlert" Height="25" Width="25" Margin="-2,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsNotifyWhenSlotAvailable, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsNotifyWhenSlotAvailable, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="MapMarker" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="ChatAlert" Height="25" Width="25" Margin="-5,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsNotifyWhenMapChanged, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsNotifyWhenMapChanged, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            
                            <!--svgc:SvgCanvas x:Name="svgcDiscord" Width="25" Height="25"/>-->
                            <Image Height="25" Width="25">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{StaticResource imgIconMiniDiscordGray}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Source" Value="{StaticResource imgIconMiniDiscordBlack}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <materialDesign:PackIcon Kind="ChatAlert" Height="25" Width="25" Margin="0,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsNotifyViaDiscordWebhook, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsNotifyViaDiscordWebhook, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="MicrosoftWindows" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="ChatAlert" Height="25" Width="25" Margin="-4,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PackIcon Kind="{Binding IsNotifyViaWindowsNotification, Converter={StaticResource BoolMdIconConverter}}"
                                                         Foreground="{Binding IsNotifyViaWindowsNotification, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Loudspeaker" Height="25" Width="25" Margin="0"/>
                            <materialDesign:PackIcon Kind="ChatAlert" Height="25" Width="25" Margin="-3,0,0,0"/>
                        </StackPanel>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <materialDesign:PackIcon Kind="{Binding IsNotifyPlaySound, Converter={StaticResource BoolMdIconConverter}}" HorizontalAlignment="Center"
                                    Foreground="{Binding IsNotifyPlaySound, Converter={StaticResource Bool_GreenOrRedConverter}}"/>
                                </DockPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <!--<xctk:PropertyGrid x:Name="propgridSv" Margin="5"
                           Grid.Row="1" Grid.Column="1"
                           
                           AutoGenerateProperties="False">
            -->
        <!--SelectedObject="{Binding ElementName=propgridSv, Path=SelectedItem}"-->
        <!--
            <xctk:PropertyGrid.PropertyDefinitions>
                <xctk:PropertyDefinition TargetProperties="isEnabled" />
            </xctk:PropertyGrid.PropertyDefinitions>
        </xctk:PropertyGrid>-->
        <DockPanel Grid.Row="2" LastChildFill="False" Grid.ColumnSpan="2">
            <!--<Image>
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Images/animated/miku_sleep/miku_sleep.sprite.gif"/>
                </Image.Source>
            </Image>-->
            <TextBlock Width="100" Height="80" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Grid.Row="1"
                       Margin="0,0,30,30"
                       Visibility="{Binding IsWatcherEnabled, Converter={StaticResource BoolVisConverter}, ConverterParameter=Normal}">
                <Rectangle Width="1500" Height="240" >
                    <Rectangle.Fill>
                        <ImageBrush Stretch="None" AlignmentX="Left" AlignmentY="Top"
                                    ImageSource="pack://application:,,,/Resources/Images/animated/miku_sleep/miku_sleep.sprite.gif"
                                    >
                            <ImageBrush.Transform>
                                <TranslateTransform x:Name="SpriteSheetOffset" X="0" Y="0" />
                            </ImageBrush.Transform>
                        </ImageBrush>
                    </Rectangle.Fill>
                </Rectangle>
            </TextBlock>
            <!--<Image Width="100" Height="80" Margin="0,0,30,30" 
                   DockPanel.Dock="Bottom" HorizontalAlignment="Right"
                   Grid.Row="1"
                   gif:AnimationBehavior.AnimationCompleted="LoadingGif_AnimationCompleted"
                   gif:AnimationBehavior.AnimationStarted="Image_AnimationStarted"
                   Visibility="{Binding IsWatcherEnabled, Converter={StaticResource BoolVisConverter}, ConverterParameter=Normal}"
                   gif:AnimationBehavior.SourceUri="{Binding WatcherLoadingGif}"                   
                   gif:AnimationBehavior.CacheFramesInMemory="False"
                   />-->
        </DockPanel>
    </Grid>
</UserControl>
